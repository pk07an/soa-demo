<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meila.soa.order.dal.dao.order.OrderRefundApplyEntityMapper" >
  <resultMap id="BaseResultMap" type="com.meila.soa.order.dal.entity.order.OrderRefundApplyEntity" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="apply_no" property="applyNo" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
    <result column="confirm_user_id" property="confirmUserId" jdbcType="BIGINT" />
    <result column="refund_status" property="refundStatus" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="VARCHAR" />
    <result column="refund_fee" property="refundFee" jdbcType="DECIMAL" />
    <result column="refund_type" property="refundType" jdbcType="VARCHAR" />
    <result column="refund_reason" property="refundReason" jdbcType="VARCHAR" />
    <result column="refund_remark" property="refundRemark" jdbcType="VARCHAR" />
    <result column="reject_reason" property="rejectReason" jdbcType="VARCHAR" />
    <result column="reject_remark" property="rejectRemark" jdbcType="VARCHAR" />
    <result column="request_by" property="requestBy" jdbcType="VARCHAR" />
    <result column="refund_time" property="refundTime" jdbcType="TIMESTAMP" />
    <result column="cancel_time" property="cancelTime" jdbcType="TIMESTAMP" />
    <result column="s_confirm_time" property="sConfirmTime" jdbcType="TIMESTAMP" />
    <result column="p_confirm_time" property="pConfirmTime" jdbcType="TIMESTAMP" />
    <result column="transfer_time" property="transferTime" jdbcType="TIMESTAMP" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="archive" property="archive" jdbcType="BIT" />
  </resultMap>
  <resultMap id="RefundOrderResultMap"
		type="com.meila.soa.order.dal.vo.order.RefundOrderVO">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="pay_no" property="payNo" jdbcType="VARCHAR" />
		<result column="type" property="type" jdbcType="VARCHAR" />
		<result column="pay_type" property="payType" jdbcType="VARCHAR" />
		<result column="buyer_id" property="buyerId" jdbcType="BIGINT" />
		<result column="shop_id" property="shopId" jdbcType="BIGINT" />
		<result column="seller_id" property="sellerId" jdbcType="BIGINT" />
		<result column="logistics_fee" property="logisticsFee"
			jdbcType="DECIMAL" />
		<result column="total_fee" property="totalFee" jdbcType="DECIMAL" />
		<result column="refund_fee" property="refundFee" jdbcType="DECIMAL" />
		<result column="refund_goods_fee" property="refundGoodsFee"
			jdbcType="DECIMAL" />
		<result column="refund_logistics_fee" property="refundLogisticsFee"
			jdbcType="DECIMAL" />
		<result column="refund_platform_fee" property="refundPlatformFee"
			jdbcType="DECIMAL" />
		<result column="paid_fee" property="paidFee" jdbcType="DECIMAL" />
		<result column="discount_fee" property="discountFee" jdbcType="DECIMAL" />
		<result column="goods_fee" property="goodsFee" jdbcType="DECIMAL" />
		<result column="paid_at" property="paidAt" jdbcType="TIMESTAMP" />
		<result column="paid_status" property="paidStatus" jdbcType="VARCHAR" />
		<result column="shipped_at" property="shippedAt" jdbcType="TIMESTAMP" />
		<result column="refund_at" property="refundAt" jdbcType="TIMESTAMP" />
		<result column="logistics_company" property="logisticsCompany"
			jdbcType="VARCHAR" />
		<result column="logistics_order_no" property="logisticsOrderNo"
			jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="remark" property="remark" jdbcType="VARCHAR" />
		<result column="archive" property="archive" jdbcType="BIT" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
		<result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
		<result column="union_id" property="unionId" jdbcType="BIGINT" />
		<result column="refund_type" property="refundType" jdbcType="VARCHAR" />
		<result column="vip" property="vip" jdbcType="BIT" />
		<result column="promotion_id" property="promotionId" jdbcType="VARCHAR" />
		<result column="coupon_id" property="couponId" jdbcType="VARCHAR" />
		<result column="partner_type" property="partnerType" jdbcType="VARCHAR" />
		<result column="checking_at" property="checkingAt" jdbcType="TIMESTAMP" />
		<result column="cancelled_at" property="cancelledAt" jdbcType="TIMESTAMP" />
		<result column="succeed_at" property="succeedAt" jdbcType="TIMESTAMP" />
		<result column="latest_sign_at" property="latestSignAt"
			jdbcType="TIMESTAMP" />
		<result column="remind_ship_at" property="remindShipAt"
			jdbcType="TIMESTAMP" />
		<result column="remark_admin" property="remarkAdmin" jdbcType="VARCHAR" />
		<result column="cancel_reason" property="cancelReason"
			jdbcType="VARCHAR" />
		<result column="buyer_name" property="buyerName" jdbcType="VARCHAR"  />
		<result column="refund_status" property="refundStatus" jdbcType="VARCHAR"  />
		<result column="refund_time" property="refundTime" jdbcType="TIMESTAMP"  />
	</resultMap>
  <sql id="Base_Column_List" >
    id, apply_no, order_id, seller_id, confirm_user_id, refund_status, order_status, 
    refund_fee, refund_type, refund_reason, refund_remark, reject_reason, reject_remark, 
    request_by, refund_time, cancel_time, s_confirm_time, p_confirm_time, transfer_time, 
    created_at, updated_at, archive
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from vdlm_order_refund_apply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from vdlm_order_refund_apply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="com.meila.soa.order.dal.entity.order.OrderRefundApplyEntity" >
    insert into vdlm_order_refund_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="applyNo != null" >
        apply_no,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="confirmUserId != null" >
        confirm_user_id,
      </if>
      <if test="refundStatus != null" >
        refund_status,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="refundFee != null" >
        refund_fee,
      </if>
      <if test="refundType != null" >
        refund_type,
      </if>
      <if test="refundReason != null" >
        refund_reason,
      </if>
      <if test="refundRemark != null" >
        refund_remark,
      </if>
      <if test="rejectReason != null" >
        reject_reason,
      </if>
      <if test="rejectRemark != null" >
        reject_remark,
      </if>
      <if test="requestBy != null" >
        request_by,
      </if>
      <if test="refundTime != null" >
        refund_time,
      </if>
      <if test="cancelTime != null" >
        cancel_time,
      </if>
      <if test="sConfirmTime != null" >
        s_confirm_time,
      </if>
      <if test="pConfirmTime != null" >
        p_confirm_time,
      </if>
      <if test="transferTime != null" >
        transfer_time,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="archive != null" >
        archive,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="applyNo != null" >
        #{applyNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="confirmUserId != null" >
        #{confirmUserId,jdbcType=BIGINT},
      </if>
      <if test="refundStatus != null" >
        #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundFee != null" >
        #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="refundType != null" >
        #{refundType,jdbcType=VARCHAR},
      </if>
      <if test="refundReason != null" >
        #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="refundRemark != null" >
        #{refundRemark,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null" >
        #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="rejectRemark != null" >
        #{rejectRemark,jdbcType=VARCHAR},
      </if>
      <if test="requestBy != null" >
        #{requestBy,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null" >
        #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null" >
        #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sConfirmTime != null" >
        #{sConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pConfirmTime != null" >
        #{pConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transferTime != null" >
        #{transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="archive != null" >
        #{archive,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.meila.soa.order.dal.entity.order.OrderRefundApplyEntity" >
    update vdlm_order_refund_apply
    <set >
      <if test="applyNo != null" >
        apply_no = #{applyNo,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="confirmUserId != null" >
        confirm_user_id = #{confirmUserId,jdbcType=BIGINT},
      </if>
      <if test="refundStatus != null" >
        refund_status = #{refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="refundFee != null" >
        refund_fee = #{refundFee,jdbcType=DECIMAL},
      </if>
      <if test="refundType != null" >
        refund_type = #{refundType,jdbcType=VARCHAR},
      </if>
      <if test="refundReason != null" >
        refund_reason = #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="refundRemark != null" >
        refund_remark = #{refundRemark,jdbcType=VARCHAR},
      </if>
      <if test="rejectReason != null" >
        reject_reason = #{rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="rejectRemark != null" >
        reject_remark = #{rejectRemark,jdbcType=VARCHAR},
      </if>
      <if test="requestBy != null" >
        request_by = #{requestBy,jdbcType=VARCHAR},
      </if>
      <if test="refundTime != null" >
        refund_time = #{refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null" >
        cancel_time = #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sConfirmTime != null" >
        s_confirm_time = #{sConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pConfirmTime != null" >
        p_confirm_time = #{pConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="transferTime != null" >
        transfer_time = #{transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="archive != null" >
        archive = #{archive,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- 自定义SQL -->
  <select id="selectByOrderIds" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vdlm_order_refund_apply
    where archive = 0 and order_id in
    <foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item,jdbcType=BIGINT}
	</foreach>
	order by id desc
  </select>
  <select id="selectByOrderId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from vdlm_order_refund_apply
    where archive = 0 and order_id = #{orderId,jdbcType=BIGINT}
	order by id desc LIMIT 1
  </select>
  <update id="updateByCondition">
   	update vdlm_order_refund_apply
    <set >
      <if test="entity.applyNo != null" >
        apply_no = #{entity.applyNo,jdbcType=VARCHAR},
      </if>
      <if test="entity.orderId != null" >
        order_id = #{entity.orderId,jdbcType=BIGINT},
      </if>
      <if test="entity.sellerId != null" >
        seller_id = #{entity.sellerId,jdbcType=BIGINT},
      </if>
      <if test="entity.confirmUserId != null" >
        confirm_user_id = #{entity.confirmUserId,jdbcType=BIGINT},
      </if>
      <if test="entity.refundStatus != null" >
        refund_status = #{entity.refundStatus,jdbcType=VARCHAR},
      </if>
      <if test="entity.orderStatus != null" >
        order_status = #{entity.orderStatus,jdbcType=VARCHAR},
      </if>
      <if test="entity.refundFee != null" >
        refund_fee = #{entity.refundFee,jdbcType=DECIMAL},
      </if>
      <if test="entity.refundType != null" >
        refund_type = #{entity.refundType,jdbcType=VARCHAR},
      </if>
      <if test="entity.refundReason != null" >
        refund_reason = #{entity.refundReason,jdbcType=VARCHAR},
      </if>
      <if test="entity.refundRemark != null" >
        refund_remark = #{entity.refundRemark,jdbcType=VARCHAR},
      </if>
      <if test="entity.rejectReason != null" >
        reject_reason = #{entity.rejectReason,jdbcType=VARCHAR},
      </if>
      <if test="entity.rejectRemark != null" >
        reject_remark = #{entity.rejectRemark,jdbcType=VARCHAR},
      </if>
      <if test="entity.requestBy != null" >
        request_by = #{entity.requestBy,jdbcType=VARCHAR},
      </if>
      <if test="entity.refundTime != null" >
        refund_time = #{entity.refundTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entity.cancelTime != null" >
        cancel_time = #{entity.cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entity.sConfirmTime != null" >
        s_confirm_time = #{entity.sConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entity.pConfirmTime != null" >
        p_confirm_time = #{entity.pConfirmTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entity.transferTime != null" >
        transfer_time = #{entity.transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="entity.createdAt != null" >
        created_at = #{entity.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="entity.updatedAt != null" >
        updated_at = #{entity.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where archive = 0
    <if test="condition.id != null" >
    and id = #{condition.id,jdbcType=BIGINT}
    </if>
    <if test="condition.orderId != null" >
    and order_id = #{condition.orderId,jdbcType=BIGINT}
    </if>
    <if test="condition.refundStatus != null" >
    and refund_status = #{condition.refundStatus,jdbcType=VARCHAR}
    </if>
    <if test="condition.requestBy != null" >
    and request_by = #{condition.requestBy,jdbcType=VARCHAR}
    </if>
  </update>
  <select id="selectByCondition" resultMap="RefundOrderResultMap">
  	
  	select id, order_no, pay_no, `type`, pay_type, buyer_id, shop_id, seller_id,
			logistics_fee,
			total_fee, refund_fee, refund_goods_fee, refund_logistics_fee,
			refund_platform_fee,
			paid_fee, discount_fee, goods_fee, paid_at, paid_status, shipped_at, refund_at,
			logistics_company,
			logistics_order_no, `status`, remark, `archive`, created_at, updated_at, union_id,
			refund_type,
			vip, promotion_id, coupon_id, partner_type, checking_at, cancelled_at,
			succeed_at,
			latest_sign_at, remind_ship_at, remark_admin, cancel_reason,
			buyer_name,
			refund_status, refund_time,refund_id from(
	  	select id, order_no, pay_no, `type`, pay_type, buyer_id, shop_id, seller_id,
				logistics_fee,
				total_fee, refund_fee, refund_goods_fee, refund_logistics_fee,
				refund_platform_fee,
				paid_fee, discount_fee, goods_fee, paid_at, paid_status, shipped_at, refund_at,
				logistics_company,
				logistics_order_no, `status`, remark, `archive`, created_at, updated_at, union_id,
				refund_type,
				vip, promotion_id, coupon_id, partner_type, checking_at, cancelled_at,
				succeed_at,
				latest_sign_at, remind_ship_at, remark_admin, cancel_reason,
				buyer_name,
				refund_status, refund_time,refund_id from(
		    select
			    t1.id, t1.order_no, t1.pay_no, t1.type, t1.pay_type, t1.buyer_id, t1.shop_id, t1.seller_id,
				t1.logistics_fee,
				t1.total_fee, t4.refund_fee, t1.refund_goods_fee, t1.refund_logistics_fee,
				t1.refund_platform_fee,
				t1.paid_fee, t1.discount_fee, t1.goods_fee, t1.paid_at, t1.paid_status, t1.shipped_at, t1.refund_at,
				t1.logistics_company,
				t1.logistics_order_no, t1.status, t1.remark, t1.archive, t1.created_at, t1.updated_at, t1.union_id,
				t4.refund_type,
				t1.vip, t1.promotion_id, t1.coupon_id, t1.partner_type, t1.checking_at, t1.cancelled_at,
				t1.succeed_at,
				t1.latest_sign_at, t1.remind_ship_at, t1.remark_admin, t1.cancel_reason,
				t2.name AS buyer_name,
				t4.refund_status, t4.refund_time, t4.id AS refund_id
			from vdlm_order_refund_apply  t4
			left join vdlm_order          t1 on t1.id = t4.order_id
			left join vdlm_user           t2 on t1.buyer_id = t2.id
			
			<if test="params.consignee != null" >
			left join vdlm_order_address  t3 on t4.order_id = t3.order_id
			</if>
			
			where t1.archive=0 and t2.archive=0 and t4.archive = 0
			<if test="params.sellerId != null" >
			and t1.seller_id=#{params.sellerId, jdbcType=BIGINT}
			</if>
			<if test="params.orderNo != null" >
			and t1.order_no=#{params.orderNo,jdbcType=VARCHAR}
			</if>
			<if test="params.consignee != null" >
			and t3.consignee=#{params.consignee,jdbcType=VARCHAR}
			and t3.archive=0
			</if>
			<if test="params.buyerName != null" >
			and t2.name like #{params.buyerName,jdbcType=VARCHAR}
			</if>
			<if test="params.startRefundTime != null" >
			and t4.refund_time between #{params.startRefundTime,jdbcType=TIMESTAMP} and #{params.endRefundTime,jdbcType=TIMESTAMP}
			</if>
			<if test="params.orderId != null" >
			and t4.order_id=#{params.orderId,jdbcType=BIGINT}
			</if>
			ORDER BY t4.id DESC
		) as record GROUP BY id ORDER BY refund_id DESC
	) as record1 where 1=1
	<if test="params.refundStatus != null" >
		and refund_status=#{params.refundStatus,jdbcType=VARCHAR}
	</if>
	limit #{params.beginId,jdbcType=BIGINT},#{params.pageSize,jdbcType=BIGINT}
  </select>
  <select id="countByCondition" resultType="java.lang.Long">
  	select count(1) from(
	  	select id,refund_status from(
		  	select id,refund_status from(
			    select
				    t1.id,t4.refund_status
				from vdlm_order_refund_apply  t4
				left join vdlm_order          t1 on t1.id = t4.order_id
				left join vdlm_user           t2 on t1.buyer_id = t2.id
				
				<if test="params.consignee != null" >
				left join vdlm_order_address  t3 on t4.order_id = t3.order_id
				</if>
				
				where t1.archive=0 and t2.archive=0 and t4.archive = 0
				<if test="params.sellerId != null" >
				and t1.seller_id=#{params.sellerId, jdbcType=BIGINT}
				</if>
				<if test="params.orderNo != null" >
				and t1.order_no=#{params.orderNo,jdbcType=VARCHAR}
				</if>
				<if test="params.consignee != null" >
				and t3.consignee=#{params.consignee,jdbcType=VARCHAR}
				and t3.archive=0
				</if>
				<if test="params.buyerName != null" >
				and t2.name like #{params.buyerName,jdbcType=VARCHAR}
				</if>
				<if test="params.startRefundTime != null" >
				and t4.refund_time between #{params.startRefundTime,jdbcType=TIMESTAMP} and #{params.endRefundTime,jdbcType=TIMESTAMP}
				</if>
				<if test="params.orderId != null" >
				and t4.order_id=#{params.orderId,jdbcType=BIGINT}
				</if>
				ORDER BY t4.id DESC
			) as record  GROUP BY id
		) as record1 where 1=1
		<if test="params.refundStatus != null" >
			and refund_status=#{params.refundStatus,jdbcType=VARCHAR}
		</if>
	) as count_record
  </select>
</mapper>