<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meila.soa.product.dal.dao.product.StatisticSkuInvShortageMapper" >
  <resultMap id="BaseResultMap" type="com.meila.soa.product.dal.entity.product.StatisticSkuInvShortage" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="seller_id" property="sellerId" jdbcType="BIGINT" />
    <result column="sku_id" property="skuId" jdbcType="BIGINT" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_main_img" property="productMainImg" jdbcType="VARCHAR" />
    <result column="storage_type" property="storageType" jdbcType="VARCHAR" />
    <result column="sku_spec" property="skuSpec" jdbcType="VARCHAR" />
    <result column="order_num" property="orderNum" jdbcType="INTEGER" />
    <result column="inventory" property="inventory" jdbcType="INTEGER" />
    <result column="inv_shortage" property="invShortage" jdbcType="INTEGER" />
    <result column="archive" property="archive" jdbcType="BIT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, seller_id, sku_id, product_name, product_main_img, storage_type, sku_spec, order_num, 
    inventory, inv_shortage, archive, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from vdlm_statistic_sku_inv_shortage
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from vdlm_statistic_sku_inv_shortage
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.meila.soa.product.dal.entity.product.StatisticSkuInvShortage" >
    insert into vdlm_statistic_sku_inv_shortage (id, seller_id, sku_id, 
      product_name, product_main_img, storage_type, 
      sku_spec, order_num, inventory, 
      inv_shortage, archive, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{sellerId,jdbcType=BIGINT}, #{skuId,jdbcType=BIGINT}, 
      #{productName,jdbcType=VARCHAR}, #{productMainImg,jdbcType=VARCHAR}, #{storageType,jdbcType=VARCHAR}, 
      #{skuSpec,jdbcType=VARCHAR}, #{orderNum,jdbcType=INTEGER}, #{inventory,jdbcType=INTEGER}, 
      #{invShortage,jdbcType=INTEGER}, #{archive,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.meila.soa.product.dal.entity.product.StatisticSkuInvShortage" >
    insert into vdlm_statistic_sku_inv_shortage
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="sellerId != null" >
        seller_id,
      </if>
      <if test="skuId != null" >
        sku_id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productMainImg != null" >
        product_main_img,
      </if>
      <if test="storageType != null" >
        storage_type,
      </if>
      <if test="skuSpec != null" >
        sku_spec,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="inventory != null" >
        inventory,
      </if>
      <if test="invShortage != null" >
        inv_shortage,
      </if>
      <if test="archive != null" >
        archive,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null" >
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null" >
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productMainImg != null" >
        #{productMainImg,jdbcType=VARCHAR},
      </if>
      <if test="storageType != null" >
        #{storageType,jdbcType=VARCHAR},
      </if>
      <if test="skuSpec != null" >
        #{skuSpec,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="inventory != null" >
        #{inventory,jdbcType=INTEGER},
      </if>
      <if test="invShortage != null" >
        #{invShortage,jdbcType=INTEGER},
      </if>
      <if test="archive != null" >
        #{archive,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.meila.soa.product.dal.entity.product.StatisticSkuInvShortage" >
    update vdlm_statistic_sku_inv_shortage
    <set >
      <if test="sellerId != null" >
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null" >
        sku_id = #{skuId,jdbcType=BIGINT},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productMainImg != null" >
        product_main_img = #{productMainImg,jdbcType=VARCHAR},
      </if>
      <if test="storageType != null" >
        storage_type = #{storageType,jdbcType=VARCHAR},
      </if>
      <if test="skuSpec != null" >
        sku_spec = #{skuSpec,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="inventory != null" >
        inventory = #{inventory,jdbcType=INTEGER},
      </if>
      <if test="invShortage != null" >
        inv_shortage = #{invShortage,jdbcType=INTEGER},
      </if>
      <if test="archive != null" >
        archive = #{archive,jdbcType=BIT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.meila.soa.product.dal.entity.product.StatisticSkuInvShortage" >
    update vdlm_statistic_sku_inv_shortage
    set seller_id = #{sellerId,jdbcType=BIGINT},
      sku_id = #{skuId,jdbcType=BIGINT},
      product_name = #{productName,jdbcType=VARCHAR},
      product_main_img = #{productMainImg,jdbcType=VARCHAR},
      storage_type = #{storageType,jdbcType=VARCHAR},
      sku_spec = #{skuSpec,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      inventory = #{inventory,jdbcType=INTEGER},
      inv_shortage = #{invShortage,jdbcType=INTEGER},
      archive = #{archive,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectBySearch" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from vdlm_statistic_sku_inv_shortage    
	<where>
		<if test="record.sellerId != null">
			seller_id = #{record.sellerId,jdbcType=BIGINT}
		</if>	
        <if test="record.storageType != null">
          storage_type = #{record.storageType,jdbcType=VARCHAR}
        </if>     	
		<if test="record.productName != null">
			and product_name like concat('%',#{record.productName},'%')
		</if>	
        and (order_num !=0 or inventory !=0)	
	</where>
	order by storage_type DESC,inv_shortage asc
    
	<if test="param.beginId != null and param.pageSize != null">
		LIMIT #{param.beginId},#{param.pageSize}
	</if>
  </select>  
  <select id="countBySearch" resultType="java.lang.Long">
    select
	count(1)
    from vdlm_statistic_sku_inv_shortage    
	<where>
		<if test="record.sellerId != null">
			seller_id = #{record.sellerId,jdbcType=BIGINT}
		</if>		
        <if test="record.storageType != null">
          storage_type = #{record.storageType,jdbcType=VARCHAR}
        </if>       
		<if test="record.productName != null">
			and product_name like concat('%',#{record.productName},'%')
		</if>		
        and (order_num !=0 or inventory !=0)  
	</where>	
  </select> 
  <delete id="deleteBySellerId">
    delete from vdlm_statistic_sku_inv_shortage
    where seller_id = #{sellerId}
  </delete>
</mapper>