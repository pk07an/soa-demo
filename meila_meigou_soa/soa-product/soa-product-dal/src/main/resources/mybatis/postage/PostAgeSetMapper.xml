<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.meila.soa.product.dal.dao.shop.PostAgeSetMapper" >

  <resultMap id="BaseResultMap" type="com.meila.soa.product.dal.entity.PostAgeSet" >
    <id column="id" property="id" />
    <result column="shop_id" property="shopId" />
    <result column="postage_set" property="postageSet"  jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, shop_id, postage_set, created_at, updated_at
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from vdlm_postage_set
    where id = #{id}
  </select>
  
  <select id="selectByShopId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from vdlm_postage_set
    where shop_id = #{shopId}
    order by created_at desc
  </select>
  
  <insert id="insert" parameterType="com.meila.soa.product.dal.entity.PostAgeSet">
    <selectKey resultType="long" keyProperty="idRaw">
        SELECT LAST_INSERT_ID() AS id
    </selectKey>
    insert into vdlm_postage_set (shop_id, postage_set, created_at, updated_at)
    values (#{shopId}, #{postageSet}, now(), now())
  </insert>
  
  <update id="update" parameterType="com.meila.soa.product.dal.entity.PostAgeSet">
    update vdlm_postage_set
    	set postage_set = #{postageSet,jdbcType=VARCHAR}, updated_at = now()
		where id = #{id}
  </update>
  
  <delete id="deleteByPrimaryKey">
    delete from vdlm_postage_set 
    where id = #{id}
  </delete>
  
  <delete id="deleteByShopId">
    delete from vdlm_postage_set 
    where shop_id = #{shopId}
  </delete>
  
</mapper>