/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.meila.soa.openapi.thrift.product.model;

import org.apache.thrift.scheme.IScheme;
import org.apache.thrift.scheme.SchemeFactory;
import org.apache.thrift.scheme.StandardScheme;

import org.apache.thrift.scheme.TupleScheme;
import org.apache.thrift.protocol.TTupleProtocol;
import org.apache.thrift.protocol.TProtocolException;
import org.apache.thrift.EncodingUtils;
import org.apache.thrift.TException;
import org.apache.thrift.async.AsyncMethodCallback;
import org.apache.thrift.server.AbstractNonblockingServer.*;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.EnumMap;
import java.util.Set;
import java.util.HashSet;
import java.util.EnumSet;
import java.util.Collections;
import java.util.BitSet;
import java.nio.ByteBuffer;
import java.util.Arrays;
import javax.annotation.Generated;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked"})
@Generated(value = "Autogenerated by Thrift Compiler (0.9.3)", date = "2016-05-25")
public class ThriftShopModel implements org.apache.thrift.TBase<ThriftShopModel, ThriftShopModel._Fields>, java.io.Serializable, Cloneable, Comparable<ThriftShopModel> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("ThriftShopModel");

  private static final org.apache.thrift.protocol.TField SHOP_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("shopId", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField SELL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("sellId", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField DESCRIPTION_FIELD_DESC = new org.apache.thrift.protocol.TField("description", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField IMG_FIELD_DESC = new org.apache.thrift.protocol.TField("img", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField SHORT_INTRO_FIELD_DESC = new org.apache.thrift.protocol.TField("shortIntro", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField SELLER_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("sellerType", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField SELLER_CERTIFICATION_FIELD_DESC = new org.apache.thrift.protocol.TField("sellerCertification", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField SELFHOOD_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("selfhoodName", org.apache.thrift.protocol.TType.STRING, (short)9);

  private static final Map<Class<? extends IScheme>, SchemeFactory> schemes = new HashMap<Class<? extends IScheme>, SchemeFactory>();
  static {
    schemes.put(StandardScheme.class, new ThriftShopModelStandardSchemeFactory());
    schemes.put(TupleScheme.class, new ThriftShopModelTupleSchemeFactory());
  }

  public long shopId; // required
  public long sellId; // optional
  public String name; // optional
  public String description; // optional
  public String img; // optional
  public String shortIntro; // optional
  public int sellerType; // optional
  public String sellerCertification; // optional
  public String selfhoodName; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SHOP_ID((short)1, "shopId"),
    SELL_ID((short)2, "sellId"),
    NAME((short)3, "name"),
    DESCRIPTION((short)4, "description"),
    IMG((short)5, "img"),
    SHORT_INTRO((short)6, "shortIntro"),
    SELLER_TYPE((short)7, "sellerType"),
    SELLER_CERTIFICATION((short)8, "sellerCertification"),
    SELFHOOD_NAME((short)9, "selfhoodName");

    private static final Map<String, _Fields> byName = new HashMap<String, _Fields>();

    static {
      for (_Fields field : EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SHOP_ID
          return SHOP_ID;
        case 2: // SELL_ID
          return SELL_ID;
        case 3: // NAME
          return NAME;
        case 4: // DESCRIPTION
          return DESCRIPTION;
        case 5: // IMG
          return IMG;
        case 6: // SHORT_INTRO
          return SHORT_INTRO;
        case 7: // SELLER_TYPE
          return SELLER_TYPE;
        case 8: // SELLER_CERTIFICATION
          return SELLER_CERTIFICATION;
        case 9: // SELFHOOD_NAME
          return SELFHOOD_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final String _fieldName;

    _Fields(short thriftId, String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __SHOPID_ISSET_ID = 0;
  private static final int __SELLID_ISSET_ID = 1;
  private static final int __SELLERTYPE_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.SELL_ID,_Fields.NAME,_Fields.DESCRIPTION,_Fields.IMG,_Fields.SHORT_INTRO,_Fields.SELLER_TYPE,_Fields.SELLER_CERTIFICATION,_Fields.SELFHOOD_NAME};
  public static final Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SHOP_ID, new org.apache.thrift.meta_data.FieldMetaData("shopId", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    tmpMap.put(_Fields.SELL_ID, new org.apache.thrift.meta_data.FieldMetaData("sellId", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64        , "long")));
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESCRIPTION, new org.apache.thrift.meta_data.FieldMetaData("description", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IMG, new org.apache.thrift.meta_data.FieldMetaData("img", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SHORT_INTRO, new org.apache.thrift.meta_data.FieldMetaData("shortIntro", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SELLER_TYPE, new org.apache.thrift.meta_data.FieldMetaData("sellerType", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32        , "int")));
    tmpMap.put(_Fields.SELLER_CERTIFICATION, new org.apache.thrift.meta_data.FieldMetaData("sellerCertification", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SELFHOOD_NAME, new org.apache.thrift.meta_data.FieldMetaData("selfhoodName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(ThriftShopModel.class, metaDataMap);
  }

  public ThriftShopModel() {
  }

  public ThriftShopModel(
    long shopId)
  {
    this();
    this.shopId = shopId;
    setShopIdIsSet(true);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public ThriftShopModel(ThriftShopModel other) {
    __isset_bitfield = other.__isset_bitfield;
    this.shopId = other.shopId;
    this.sellId = other.sellId;
    if (other.isSetName()) {
      this.name = other.name;
    }
    if (other.isSetDescription()) {
      this.description = other.description;
    }
    if (other.isSetImg()) {
      this.img = other.img;
    }
    if (other.isSetShortIntro()) {
      this.shortIntro = other.shortIntro;
    }
    this.sellerType = other.sellerType;
    if (other.isSetSellerCertification()) {
      this.sellerCertification = other.sellerCertification;
    }
    if (other.isSetSelfhoodName()) {
      this.selfhoodName = other.selfhoodName;
    }
  }

  public ThriftShopModel deepCopy() {
    return new ThriftShopModel(this);
  }

  @Override
  public void clear() {
    setShopIdIsSet(false);
    this.shopId = 0;
    setSellIdIsSet(false);
    this.sellId = 0;
    this.name = null;
    this.description = null;
    this.img = null;
    this.shortIntro = null;
    setSellerTypeIsSet(false);
    this.sellerType = 0;
    this.sellerCertification = null;
    this.selfhoodName = null;
  }

  public long getShopId() {
    return this.shopId;
  }

  public ThriftShopModel setShopId(long shopId) {
    this.shopId = shopId;
    setShopIdIsSet(true);
    return this;
  }

  public void unsetShopId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SHOPID_ISSET_ID);
  }

  /** Returns true if field shopId is set (has been assigned a value) and false otherwise */
  public boolean isSetShopId() {
    return EncodingUtils.testBit(__isset_bitfield, __SHOPID_ISSET_ID);
  }

  public void setShopIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SHOPID_ISSET_ID, value);
  }

  public long getSellId() {
    return this.sellId;
  }

  public ThriftShopModel setSellId(long sellId) {
    this.sellId = sellId;
    setSellIdIsSet(true);
    return this;
  }

  public void unsetSellId() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SELLID_ISSET_ID);
  }

  /** Returns true if field sellId is set (has been assigned a value) and false otherwise */
  public boolean isSetSellId() {
    return EncodingUtils.testBit(__isset_bitfield, __SELLID_ISSET_ID);
  }

  public void setSellIdIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SELLID_ISSET_ID, value);
  }

  public String getName() {
    return this.name;
  }

  public ThriftShopModel setName(String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public String getDescription() {
    return this.description;
  }

  public ThriftShopModel setDescription(String description) {
    this.description = description;
    return this;
  }

  public void unsetDescription() {
    this.description = null;
  }

  /** Returns true if field description is set (has been assigned a value) and false otherwise */
  public boolean isSetDescription() {
    return this.description != null;
  }

  public void setDescriptionIsSet(boolean value) {
    if (!value) {
      this.description = null;
    }
  }

  public String getImg() {
    return this.img;
  }

  public ThriftShopModel setImg(String img) {
    this.img = img;
    return this;
  }

  public void unsetImg() {
    this.img = null;
  }

  /** Returns true if field img is set (has been assigned a value) and false otherwise */
  public boolean isSetImg() {
    return this.img != null;
  }

  public void setImgIsSet(boolean value) {
    if (!value) {
      this.img = null;
    }
  }

  public String getShortIntro() {
    return this.shortIntro;
  }

  public ThriftShopModel setShortIntro(String shortIntro) {
    this.shortIntro = shortIntro;
    return this;
  }

  public void unsetShortIntro() {
    this.shortIntro = null;
  }

  /** Returns true if field shortIntro is set (has been assigned a value) and false otherwise */
  public boolean isSetShortIntro() {
    return this.shortIntro != null;
  }

  public void setShortIntroIsSet(boolean value) {
    if (!value) {
      this.shortIntro = null;
    }
  }

  public int getSellerType() {
    return this.sellerType;
  }

  public ThriftShopModel setSellerType(int sellerType) {
    this.sellerType = sellerType;
    setSellerTypeIsSet(true);
    return this;
  }

  public void unsetSellerType() {
    __isset_bitfield = EncodingUtils.clearBit(__isset_bitfield, __SELLERTYPE_ISSET_ID);
  }

  /** Returns true if field sellerType is set (has been assigned a value) and false otherwise */
  public boolean isSetSellerType() {
    return EncodingUtils.testBit(__isset_bitfield, __SELLERTYPE_ISSET_ID);
  }

  public void setSellerTypeIsSet(boolean value) {
    __isset_bitfield = EncodingUtils.setBit(__isset_bitfield, __SELLERTYPE_ISSET_ID, value);
  }

  public String getSellerCertification() {
    return this.sellerCertification;
  }

  public ThriftShopModel setSellerCertification(String sellerCertification) {
    this.sellerCertification = sellerCertification;
    return this;
  }

  public void unsetSellerCertification() {
    this.sellerCertification = null;
  }

  /** Returns true if field sellerCertification is set (has been assigned a value) and false otherwise */
  public boolean isSetSellerCertification() {
    return this.sellerCertification != null;
  }

  public void setSellerCertificationIsSet(boolean value) {
    if (!value) {
      this.sellerCertification = null;
    }
  }

  public String getSelfhoodName() {
    return this.selfhoodName;
  }

  public ThriftShopModel setSelfhoodName(String selfhoodName) {
    this.selfhoodName = selfhoodName;
    return this;
  }

  public void unsetSelfhoodName() {
    this.selfhoodName = null;
  }

  /** Returns true if field selfhoodName is set (has been assigned a value) and false otherwise */
  public boolean isSetSelfhoodName() {
    return this.selfhoodName != null;
  }

  public void setSelfhoodNameIsSet(boolean value) {
    if (!value) {
      this.selfhoodName = null;
    }
  }

  public void setFieldValue(_Fields field, Object value) {
    switch (field) {
    case SHOP_ID:
      if (value == null) {
        unsetShopId();
      } else {
        setShopId((Long)value);
      }
      break;

    case SELL_ID:
      if (value == null) {
        unsetSellId();
      } else {
        setSellId((Long)value);
      }
      break;

    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((String)value);
      }
      break;

    case DESCRIPTION:
      if (value == null) {
        unsetDescription();
      } else {
        setDescription((String)value);
      }
      break;

    case IMG:
      if (value == null) {
        unsetImg();
      } else {
        setImg((String)value);
      }
      break;

    case SHORT_INTRO:
      if (value == null) {
        unsetShortIntro();
      } else {
        setShortIntro((String)value);
      }
      break;

    case SELLER_TYPE:
      if (value == null) {
        unsetSellerType();
      } else {
        setSellerType((Integer)value);
      }
      break;

    case SELLER_CERTIFICATION:
      if (value == null) {
        unsetSellerCertification();
      } else {
        setSellerCertification((String)value);
      }
      break;

    case SELFHOOD_NAME:
      if (value == null) {
        unsetSelfhoodName();
      } else {
        setSelfhoodName((String)value);
      }
      break;

    }
  }

  public Object getFieldValue(_Fields field) {
    switch (field) {
    case SHOP_ID:
      return getShopId();

    case SELL_ID:
      return getSellId();

    case NAME:
      return getName();

    case DESCRIPTION:
      return getDescription();

    case IMG:
      return getImg();

    case SHORT_INTRO:
      return getShortIntro();

    case SELLER_TYPE:
      return getSellerType();

    case SELLER_CERTIFICATION:
      return getSellerCertification();

    case SELFHOOD_NAME:
      return getSelfhoodName();

    }
    throw new IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new IllegalArgumentException();
    }

    switch (field) {
    case SHOP_ID:
      return isSetShopId();
    case SELL_ID:
      return isSetSellId();
    case NAME:
      return isSetName();
    case DESCRIPTION:
      return isSetDescription();
    case IMG:
      return isSetImg();
    case SHORT_INTRO:
      return isSetShortIntro();
    case SELLER_TYPE:
      return isSetSellerType();
    case SELLER_CERTIFICATION:
      return isSetSellerCertification();
    case SELFHOOD_NAME:
      return isSetSelfhoodName();
    }
    throw new IllegalStateException();
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof ThriftShopModel)
      return this.equals((ThriftShopModel)that);
    return false;
  }

  public boolean equals(ThriftShopModel that) {
    if (that == null)
      return false;

    boolean this_present_shopId = true;
    boolean that_present_shopId = true;
    if (this_present_shopId || that_present_shopId) {
      if (!(this_present_shopId && that_present_shopId))
        return false;
      if (this.shopId != that.shopId)
        return false;
    }

    boolean this_present_sellId = true && this.isSetSellId();
    boolean that_present_sellId = true && that.isSetSellId();
    if (this_present_sellId || that_present_sellId) {
      if (!(this_present_sellId && that_present_sellId))
        return false;
      if (this.sellId != that.sellId)
        return false;
    }

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_description = true && this.isSetDescription();
    boolean that_present_description = true && that.isSetDescription();
    if (this_present_description || that_present_description) {
      if (!(this_present_description && that_present_description))
        return false;
      if (!this.description.equals(that.description))
        return false;
    }

    boolean this_present_img = true && this.isSetImg();
    boolean that_present_img = true && that.isSetImg();
    if (this_present_img || that_present_img) {
      if (!(this_present_img && that_present_img))
        return false;
      if (!this.img.equals(that.img))
        return false;
    }

    boolean this_present_shortIntro = true && this.isSetShortIntro();
    boolean that_present_shortIntro = true && that.isSetShortIntro();
    if (this_present_shortIntro || that_present_shortIntro) {
      if (!(this_present_shortIntro && that_present_shortIntro))
        return false;
      if (!this.shortIntro.equals(that.shortIntro))
        return false;
    }

    boolean this_present_sellerType = true && this.isSetSellerType();
    boolean that_present_sellerType = true && that.isSetSellerType();
    if (this_present_sellerType || that_present_sellerType) {
      if (!(this_present_sellerType && that_present_sellerType))
        return false;
      if (this.sellerType != that.sellerType)
        return false;
    }

    boolean this_present_sellerCertification = true && this.isSetSellerCertification();
    boolean that_present_sellerCertification = true && that.isSetSellerCertification();
    if (this_present_sellerCertification || that_present_sellerCertification) {
      if (!(this_present_sellerCertification && that_present_sellerCertification))
        return false;
      if (!this.sellerCertification.equals(that.sellerCertification))
        return false;
    }

    boolean this_present_selfhoodName = true && this.isSetSelfhoodName();
    boolean that_present_selfhoodName = true && that.isSetSelfhoodName();
    if (this_present_selfhoodName || that_present_selfhoodName) {
      if (!(this_present_selfhoodName && that_present_selfhoodName))
        return false;
      if (!this.selfhoodName.equals(that.selfhoodName))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    List<Object> list = new ArrayList<Object>();

    boolean present_shopId = true;
    list.add(present_shopId);
    if (present_shopId)
      list.add(shopId);

    boolean present_sellId = true && (isSetSellId());
    list.add(present_sellId);
    if (present_sellId)
      list.add(sellId);

    boolean present_name = true && (isSetName());
    list.add(present_name);
    if (present_name)
      list.add(name);

    boolean present_description = true && (isSetDescription());
    list.add(present_description);
    if (present_description)
      list.add(description);

    boolean present_img = true && (isSetImg());
    list.add(present_img);
    if (present_img)
      list.add(img);

    boolean present_shortIntro = true && (isSetShortIntro());
    list.add(present_shortIntro);
    if (present_shortIntro)
      list.add(shortIntro);

    boolean present_sellerType = true && (isSetSellerType());
    list.add(present_sellerType);
    if (present_sellerType)
      list.add(sellerType);

    boolean present_sellerCertification = true && (isSetSellerCertification());
    list.add(present_sellerCertification);
    if (present_sellerCertification)
      list.add(sellerCertification);

    boolean present_selfhoodName = true && (isSetSelfhoodName());
    list.add(present_selfhoodName);
    if (present_selfhoodName)
      list.add(selfhoodName);

    return list.hashCode();
  }

  @Override
  public int compareTo(ThriftShopModel other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = Boolean.valueOf(isSetShopId()).compareTo(other.isSetShopId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShopId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shopId, other.shopId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellId()).compareTo(other.isSetSellId());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellId()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellId, other.sellId);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetDescription()).compareTo(other.isSetDescription());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDescription()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.description, other.description);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetImg()).compareTo(other.isSetImg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetImg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.img, other.img);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetShortIntro()).compareTo(other.isSetShortIntro());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetShortIntro()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.shortIntro, other.shortIntro);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerType()).compareTo(other.isSetSellerType());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerType()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellerType, other.sellerType);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSellerCertification()).compareTo(other.isSetSellerCertification());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSellerCertification()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.sellerCertification, other.sellerCertification);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = Boolean.valueOf(isSetSelfhoodName()).compareTo(other.isSetSelfhoodName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSelfhoodName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.selfhoodName, other.selfhoodName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    schemes.get(iprot.getScheme()).getScheme().read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    schemes.get(oprot.getScheme()).getScheme().write(oprot, this);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("ThriftShopModel(");
    boolean first = true;

    sb.append("shopId:");
    sb.append(this.shopId);
    first = false;
    if (isSetSellId()) {
      if (!first) sb.append(", ");
      sb.append("sellId:");
      sb.append(this.sellId);
      first = false;
    }
    if (isSetName()) {
      if (!first) sb.append(", ");
      sb.append("name:");
      if (this.name == null) {
        sb.append("null");
      } else {
        sb.append(this.name);
      }
      first = false;
    }
    if (isSetDescription()) {
      if (!first) sb.append(", ");
      sb.append("description:");
      if (this.description == null) {
        sb.append("null");
      } else {
        sb.append(this.description);
      }
      first = false;
    }
    if (isSetImg()) {
      if (!first) sb.append(", ");
      sb.append("img:");
      if (this.img == null) {
        sb.append("null");
      } else {
        sb.append(this.img);
      }
      first = false;
    }
    if (isSetShortIntro()) {
      if (!first) sb.append(", ");
      sb.append("shortIntro:");
      if (this.shortIntro == null) {
        sb.append("null");
      } else {
        sb.append(this.shortIntro);
      }
      first = false;
    }
    if (isSetSellerType()) {
      if (!first) sb.append(", ");
      sb.append("sellerType:");
      sb.append(this.sellerType);
      first = false;
    }
    if (isSetSellerCertification()) {
      if (!first) sb.append(", ");
      sb.append("sellerCertification:");
      if (this.sellerCertification == null) {
        sb.append("null");
      } else {
        sb.append(this.sellerCertification);
      }
      first = false;
    }
    if (isSetSelfhoodName()) {
      if (!first) sb.append(", ");
      sb.append("selfhoodName:");
      if (this.selfhoodName == null) {
        sb.append("null");
      } else {
        sb.append(this.selfhoodName);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // alas, we cannot check 'shopId' because it's a primitive and you chose the non-beans generator.
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class ThriftShopModelStandardSchemeFactory implements SchemeFactory {
    public ThriftShopModelStandardScheme getScheme() {
      return new ThriftShopModelStandardScheme();
    }
  }

  private static class ThriftShopModelStandardScheme extends StandardScheme<ThriftShopModel> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, ThriftShopModel struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SHOP_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.shopId = iprot.readI64();
              struct.setShopIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SELL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.sellId = iprot.readI64();
              struct.setSellIdIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // DESCRIPTION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.description = iprot.readString();
              struct.setDescriptionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // IMG
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.img = iprot.readString();
              struct.setImgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SHORT_INTRO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.shortIntro = iprot.readString();
              struct.setShortIntroIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SELLER_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.sellerType = iprot.readI32();
              struct.setSellerTypeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SELLER_CERTIFICATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.sellerCertification = iprot.readString();
              struct.setSellerCertificationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // SELFHOOD_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.selfhoodName = iprot.readString();
              struct.setSelfhoodNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      if (!struct.isSetShopId()) {
        throw new org.apache.thrift.protocol.TProtocolException("Required field 'shopId' was not found in serialized data! Struct: " + toString());
      }
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, ThriftShopModel struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(SHOP_ID_FIELD_DESC);
      oprot.writeI64(struct.shopId);
      oprot.writeFieldEnd();
      if (struct.isSetSellId()) {
        oprot.writeFieldBegin(SELL_ID_FIELD_DESC);
        oprot.writeI64(struct.sellId);
        oprot.writeFieldEnd();
      }
      if (struct.name != null) {
        if (struct.isSetName()) {
          oprot.writeFieldBegin(NAME_FIELD_DESC);
          oprot.writeString(struct.name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.description != null) {
        if (struct.isSetDescription()) {
          oprot.writeFieldBegin(DESCRIPTION_FIELD_DESC);
          oprot.writeString(struct.description);
          oprot.writeFieldEnd();
        }
      }
      if (struct.img != null) {
        if (struct.isSetImg()) {
          oprot.writeFieldBegin(IMG_FIELD_DESC);
          oprot.writeString(struct.img);
          oprot.writeFieldEnd();
        }
      }
      if (struct.shortIntro != null) {
        if (struct.isSetShortIntro()) {
          oprot.writeFieldBegin(SHORT_INTRO_FIELD_DESC);
          oprot.writeString(struct.shortIntro);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetSellerType()) {
        oprot.writeFieldBegin(SELLER_TYPE_FIELD_DESC);
        oprot.writeI32(struct.sellerType);
        oprot.writeFieldEnd();
      }
      if (struct.sellerCertification != null) {
        if (struct.isSetSellerCertification()) {
          oprot.writeFieldBegin(SELLER_CERTIFICATION_FIELD_DESC);
          oprot.writeString(struct.sellerCertification);
          oprot.writeFieldEnd();
        }
      }
      if (struct.selfhoodName != null) {
        if (struct.isSetSelfhoodName()) {
          oprot.writeFieldBegin(SELFHOOD_NAME_FIELD_DESC);
          oprot.writeString(struct.selfhoodName);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class ThriftShopModelTupleSchemeFactory implements SchemeFactory {
    public ThriftShopModelTupleScheme getScheme() {
      return new ThriftShopModelTupleScheme();
    }
  }

  private static class ThriftShopModelTupleScheme extends TupleScheme<ThriftShopModel> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, ThriftShopModel struct) throws org.apache.thrift.TException {
      TTupleProtocol oprot = (TTupleProtocol) prot;
      oprot.writeI64(struct.shopId);
      BitSet optionals = new BitSet();
      if (struct.isSetSellId()) {
        optionals.set(0);
      }
      if (struct.isSetName()) {
        optionals.set(1);
      }
      if (struct.isSetDescription()) {
        optionals.set(2);
      }
      if (struct.isSetImg()) {
        optionals.set(3);
      }
      if (struct.isSetShortIntro()) {
        optionals.set(4);
      }
      if (struct.isSetSellerType()) {
        optionals.set(5);
      }
      if (struct.isSetSellerCertification()) {
        optionals.set(6);
      }
      if (struct.isSetSelfhoodName()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetSellId()) {
        oprot.writeI64(struct.sellId);
      }
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetDescription()) {
        oprot.writeString(struct.description);
      }
      if (struct.isSetImg()) {
        oprot.writeString(struct.img);
      }
      if (struct.isSetShortIntro()) {
        oprot.writeString(struct.shortIntro);
      }
      if (struct.isSetSellerType()) {
        oprot.writeI32(struct.sellerType);
      }
      if (struct.isSetSellerCertification()) {
        oprot.writeString(struct.sellerCertification);
      }
      if (struct.isSetSelfhoodName()) {
        oprot.writeString(struct.selfhoodName);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, ThriftShopModel struct) throws org.apache.thrift.TException {
      TTupleProtocol iprot = (TTupleProtocol) prot;
      struct.shopId = iprot.readI64();
      struct.setShopIdIsSet(true);
      BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.sellId = iprot.readI64();
        struct.setSellIdIsSet(true);
      }
      if (incoming.get(1)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.description = iprot.readString();
        struct.setDescriptionIsSet(true);
      }
      if (incoming.get(3)) {
        struct.img = iprot.readString();
        struct.setImgIsSet(true);
      }
      if (incoming.get(4)) {
        struct.shortIntro = iprot.readString();
        struct.setShortIntroIsSet(true);
      }
      if (incoming.get(5)) {
        struct.sellerType = iprot.readI32();
        struct.setSellerTypeIsSet(true);
      }
      if (incoming.get(6)) {
        struct.sellerCertification = iprot.readString();
        struct.setSellerCertificationIsSet(true);
      }
      if (incoming.get(7)) {
        struct.selfhoodName = iprot.readString();
        struct.setSelfhoodNameIsSet(true);
      }
    }
  }

}

